name: Build and Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      version:
        description: "Version to release (e.g., 1.0.203)"
        required: true
        default: "1.0.203"

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        node-version: [18]
        include:
          - os: macos-latest
            platform: darwin
            arch: x64
            target: x64
          - os: macos-latest
            platform: darwin
            arch: arm64
            target: arm64
          - os: windows-latest
            platform: win32
            arch: x64
            target: x64
          - os: ubuntu-latest
            platform: linux
            arch: x64
            target: x64

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Setup platform-specific environment
        run: |
          if [ "${{ matrix.os }}" = "macos-latest" ]; then
            echo "PLATFORM=darwin" >> $GITHUB_ENV
            echo "NODE_ENV=production" >> $GITHUB_ENV
          elif [ "${{ matrix.os }}" = "windows-latest" ]; then
            echo "PLATFORM=win32" >> $GITHUB_ENV
            echo "NODE_ENV=production" >> $GITHUB_ENV
          else
            echo "PLATFORM=linux" >> $GITHUB_ENV
            echo "NODE_ENV=production" >> $GITHUB_ENV
          fi

      - name: Build application
        run: |
          if [ "${{ matrix.os }}" = "macos-latest" ]; then
            if [ "${{ matrix.target }}" = "arm64" ]; then
              npm run make -- --arch arm64
            else
              npm run make -- --arch x64
            fi
          else
            npm run make
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-${{ matrix.target }}
          path: out/make/
          retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "npm"

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Extract version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          name: Release ${{ steps.get_version.outputs.VERSION }}
          body: |
            ## What's New in ${{ steps.get_version.outputs.VERSION }}

            ### 🚀 Features
            - Session Review feature for enhanced productivity tracking

            ### 🔧 Improvements
            - Enhanced auto-update system
            - Better performance and stability

            ### 📱 Supported Platforms
            - macOS (Intel & Apple Silicon)
            - Windows (x64)
            - Linux (x64)

            ### 📥 Downloads
            Download the appropriate version for your platform from the assets below.

            ### 🔄 Auto-Update
            This version supports automatic updates. The app will check for updates every 24 hours.
          draft: false
          prerelease: false
          files: |
            artifacts/*/itracksy-*.dmg
            artifacts/*/itracksy-*.exe
            artifacts/*/itracksy-*.AppImage
            artifacts/*/itracksy-*.deb
            artifacts/*/itracksy-*.rpm
          token: ${{ secrets.GITHUB_TOKEN }}

  notify:
    needs: release
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Notify completion
        run: |
          if [ "${{ needs.release.result }}" = "success" ]; then
            echo "✅ Release ${{ github.ref_name }} created successfully!"
            echo "🚀 Auto-updates will be available to users within 24 hours"
          else
            echo "❌ Release failed"
            exit 1
          fi
