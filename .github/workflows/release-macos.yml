name: Release macOS

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      version:
        description: "Version to release (e.g., 1.0.204)"
        required: true
        default: "1.0.204"

jobs:
  build-macos:
    strategy:
      matrix:
        arch: [arm64, x64]
        include:
          - arch: arm64
            target: arm64
            description: "Apple Silicon (ARM64)"
          - arch: x64
            target: x64
            description: "Intel (x64)"

    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Setup macOS environment
        run: |
          echo "PLATFORM=darwin" >> $GITHUB_ENV
          echo "NODE_ENV=production" >> $GITHUB_ENV
          echo "TARGET_ARCH=${{ matrix.arch }}" >> $GITHUB_ENV

      - name: Build macOS application
        run: |
          echo "Building for macOS ${{ matrix.description }}"
          npm run make -- --arch ${{ matrix.arch }}

      - name: Upload macOS artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-${{ matrix.arch }}
          path: out/make/
          retention-days: 30

  release-macos:
    needs: build-macos
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "npm"

      - name: Download macOS artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Extract version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Create macOS Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          name: "macOS Release ${{ steps.get_version.outputs.VERSION }}"
          body: |
            ## üçé macOS Release ${{ steps.get_version.outputs.VERSION }}

            ### üöÄ What's New
            - Session Review feature for enhanced productivity tracking
            - Enhanced auto-update system
            - Better performance and stability

            ### üì± Supported Architectures
            - **Apple Silicon (ARM64)**: Native performance on M1/M2/M3 Macs
            - **Intel (x64)**: Compatible with Intel-based Macs

            ### üì• Downloads
            Download the appropriate version for your Mac:

            **Apple Silicon Macs (M1/M2/M3):**
            - Use the ARM64 DMG installer
            - Use the ARM64 ZIP for portable installation

            **Intel Macs:**
            - Use the x64 DMG installer
            - Use the x64 ZIP for portable installation

            ### üîÑ Auto-Update
            This version supports automatic updates. The app will check for updates every 24 hours.

            ### üõ°Ô∏è Security
            - Code signed and notarized for macOS
            - Compatible with Gatekeeper security
            - Safe to install and run

            ### üìã Installation
            1. Download the appropriate DMG file for your Mac
            2. Double-click to mount the disk image
            3. Drag iTracksy to your Applications folder
            4. Launch from Applications or Spotlight

            ### üîß Troubleshooting
            If you encounter any issues:
            - Ensure you're using the correct architecture version
            - Check System Preferences > Security & Privacy for any blocked apps
            - Verify the app is properly code signed
          draft: false
          prerelease: false
          files: |
            artifacts/macos-arm64/itracksy-*.dmg
            artifacts/macos-arm64/itracksy-*.zip
            artifacts/macos-x64/itracksy-*.dmg
            artifacts/macos-x64/itracksy-*.zip
          token: ${{ secrets.GITHUB_TOKEN }}

  notify-macos:
    needs: release-macos
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Notify macOS release completion
        run: |
          if [ "${{ needs.release_macos.result }}" = "success" ]; then
            echo "‚úÖ macOS Release ${{ github.ref_name }} created successfully!"
            echo "üçé Both ARM64 and x64 versions are now available"
            echo "üöÄ Auto-updates will be available to macOS users within 24 hours"
            echo ""
            echo "üì± Release includes:"
            echo "  ‚Ä¢ Apple Silicon (ARM64) DMG installer"
            echo "  ‚Ä¢ Intel (x64) DMG installer"
            echo "  ‚Ä¢ Portable ZIP versions for both architectures"
          else
            echo "‚ùå macOS release failed"
            exit 1
          fi
